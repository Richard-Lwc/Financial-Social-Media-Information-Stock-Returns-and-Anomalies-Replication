select(Year,Month,S1,S10,SHL,M1,M10,MHL,B1,B10,BHL)
#双变量分组
#S
for (i in 1:3) {
# value-weighted模型
tblC[i,7] <- myregression(dataC7[[i+2]],"vw")[1]
tblC[i,8] <- myregression(dataC7[[i+2]],"vw")[2]
}
#M
for (i in 1:3) {
# value-weighted模型
tblC[i,9] <- myregression(dataC7[[i+5]],"vw")[1]
tblC[i,10] <- myregression(dataC7[[i+5]],"vw")[2]
}
#B
for (i in 1:3) {
# value-weighted模型
tblC[i,11] <- myregression(dataC7[[i+8]],"vw")[1]
tblC[i,12] <- myregression(dataC7[[i+8]],"vw")[2]
}
## 按照ME的分组计算CH3和CH4的alpha
```{r}
```{r}
#暂且计算CH3
for (i in 1:3) {
# value-weighted模型
tblC[4,2*i+5] <-
myregression(dataC8[[i+2]],"CH3",dataC8$mktrf,dataC8$SMB,dataC8$VMG)[1]
tblC[4,2*i+6] <-
myregression(dataC8[[i+2]],"CH3",dataC8$mktrf,dataC8$SMB,dataC8$VMG)[2]
}
dataC8 <- dataC3 |>
drop_na()|>
group_by(Year,Month,group_IVOL) |>
summarise(exret_eql_weight=mean(Ri), .groups = "drop") |>
pivot_wider(names_from = group_IVOL, values_from = exret_eql_weight)|>
left_join(CH3,by=c("Year","Month")) |>
left_join(CH4,by=c("Year","Month","mktrf"))
#暂且计算CH3
for (i in 1:3) {
# value-weighted模型
tblC[4,2*i+5] <-
myregression(dataC8[[i+2]],"CH3",dataC8$mktrf,dataC8$SMB,dataC8$VMG)[1]
tblC[4,2*i+6] <-
myregression(dataC8[[i+2]],"CH3",dataC8$mktrf,dataC8$SMB,dataC8$VMG)[2]
}
starsC <-  matrix(0, nrow = 4,ncol=12)
df_r_ret <- 131
df_r_alpha <- 128 #CH3
# 计算每个系数在不同的显著性水平上的显著性，并将结果存储在"stars"矩阵中
# 前三行和后面的自由度不同
for (k in 1:3) {
for (v in seq(from = 1, to = 11, by = 2)) {
starsC[k, v] <- (abs(tblC[k, v + 1]) > abs(qt(0.1/2, df_r_ret))) +
(abs(tblC[k, v + 1]) > abs(qt(0.05/2, df_r_ret))) +
(abs(tblC[k, v + 1]) > abs(qt(0.01/2, df_r_ret)))
}
}
for (v in seq(from = 1, to = 11, by = 2)) {
starsC[4, v] <- (abs(tblC[4, v + 1]) > abs(qt(0.1/2, df_r_alpha))) +
(abs(tblC[4, v + 1]) > abs(qt(0.05/2, df_r_alpha))) +
(abs(tblC[4, v + 1]) > abs(qt(0.01/2, df_r_alpha)))}
#保留两位小数
tblC1 <- round(tblC,digits = 2)
tblC1 <- matrix(c(as.character(tblC1)),nrow=4)
tblC1[starsC == 1] <- sub("^(.*)$", "\\1*", tblC1[starsC == 1])
tblC1[starsC == 2] <- sub("^(.*)$", "\\1**", tblC1[starsC == 2])
tblC1[starsC == 3] <- sub("^(.*)$", "\\1***", tblC1[starsC == 3])
write.csv(tblC1, file="tbl4C.csv")
library(tidyverse)
library(xts)
library(tseries)
library(zoo)
library(dplyr)
library(lmtest)
library(sandwich)
#设置函数计算系数值以及Newey-West t 值，y值为“vw”代表为均值平均，CH3代表CH3模型的alpha，CH4代表CH4模型的alpha，z,w,u,v的默认值为0
myregression <- function(x,y,z=0,w=0,u=0,v=0){
if(y=="vw"){
model <- lm(x~1)
}else if(y=="CH3"){
model <- lm(x~z+w+u)
}else{
model <- lm(x~z+w+u+v)
}
nw <- NeweyWest(model,lag=24,adjust = T)
ttest <- coeftest(model, vcov = nw)[1,]
return(c(ttest[1],ttest[3]))
}
tblD <- matrix(NA,nrow = 4,ncol=12,
dimnames=list(c("L", "H", "H-L","Alpha"),
c("S","S_t","M","M_t","B","B_t",
"E_S","E_S_t","E_M","E_M_t","E_B","E_B_t")))
INST1 <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/INST/INST.csv")
FI1 <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/GUBA_上市公司股吧帖子统计（自然日）_ALL/FI.csv")
INST1 <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/INST/INST.csv")
INST1 <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/INST/INST.csv")
FI1 <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/GUBA_上市公司股吧帖子统计（自然日）_ALL/FI.csv")
exret <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/处理后的个股月超额收益率/refined monthly exret.csv")
exret <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/处理后的个股月超额收益率/refined monthly exret.csv")
CH3 <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/CH3&CH4/CH3.csv")
CH3 <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/CH3&CH4/CH3.csv")
CH4 <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/CH3&CH4/CH4.csv")
#股票代码格式统一
FI1$Stkcd <- str_pad(FI1$Stkcd, width = 6, pad = "0", side = "left")
exret$Stkcd <- str_pad(exret$Stkcd, width = 6, pad = "0", side = "left")
exret$Stkcd <- str_pad(exret$Stkcd, width = 6, pad = "0", side = "left")
#提取日期
Date1 <- FI1 |>
select(Stkcd,Year,Month)
INST1 <- INST1 |>
separate(EndDate, c("Year","Month","Day"),sep = "-",convert = T) |>
mutate(Year=as.numeric(Year),
Month=as.numeric(Month)) |>
rename(Stkcd=Symbol,INST=InsInvestorProp)
INST1 <- INST1 |>
separate(EndDate, c("Year","Month","Day"),sep = "-",convert = T) |>
mutate(Year=as.numeric(Year),
Month=as.numeric(Month)) |>
rename(Stkcd=Symbol,INST=InsInvestorProp)
InST2 <- Date1 |>
left_join(INST1,by=c("Stkcd","Year","Month"))
View(Date1)
InST2 <- Date1 |> mutate(Stkcd=as.numeric(Stkcd)) |>
left_join(INST1,by=c("Stkcd","Year","Month"))
InST2$INST_filled <- c(NA,NA,na.locf(InST2$INST)) #由于没有上期末的数据所以有两个缺失值
data <- exret |>
left_join(FI1,by = c("Stkcd","Year","Month")) |>
mutate(Ri=Ri*100)
#股票代码格式统一
FI1$Stkcd <- str_pad(FI1$Stkcd, width = 6, pad = "0", side = "left")
exret$Stkcd <- str_pad(exret$Stkcd, width = 6, pad = "0", side = "left")
#提取日期
Date1 <- FI1 |>
select(Stkcd,Year,Month)
INST1 <- INST1 |>
separate(EndDate, c("Year","Month","Day"),sep = "-",convert = T) |>
mutate(Year=as.numeric(Year),
Month=as.numeric(Month)) |>
rename(Stkcd=Symbol,INST=InsInvestorProp)
InST2 <- Date1 |>
left_join(INST1,by=c("Stkcd","Year","Month"))
InST2 <- Date1 |> mutate(Stkcd = as.numeric(Stkcd)) |>
left_join(INST1,by=c("Stkcd","Year","Month"))
View(InST2)
InST2$INST_filled <- c(NA,NA,na.locf(InST2$INST)) #由于没有上期末的数据所以有两个缺失值
InST2 <- Date1 |> mutate(Stkcd = as.numeric(Stkcd)) |>
left_join(INST1,by=c("Stkcd","Year","Month")) %>%
mutate(INST_filled = fill(INST))
View(InST2)
?fill
InST2 <- Date1 |> mutate(Stkcd = as.numeric(Stkcd)) |>
left_join(INST1,by=c("Stkcd","Year","Month")) %>%
fill(INST)
View(InST2)
InST2 <- Date1 |> mutate(Stkcd = as.numeric(Stkcd)) |>
left_join(INST1,by=c("Stkcd","Year","Month")) %>%
fill(INST) %>% rename(INST_filled=INST)
data <- exret |>
left_join(FI1,by = c("Stkcd","Year","Month")) |>
mutate(Ri=Ri*100)
InST2$INST_lag <- lag(InST2$INST_filled)
dataD1 <- data |>
left_join(InST2,by=c("Stkcd","Year","Month"))
dataD1 <- data |> mutate(Stkcd = as.numeric(Stkcd)) |>
left_join(InST2,by=c("Stkcd","Year","Month"))
dataD2 <- dataD1 |>
select(Stkcd,Year,Month,lag_FI,Mretwd,rf,Ri,Msmvttl,INST_lag) |>
drop_na()
dataD3 <- dataD2 |>
group_by(Year, Month) %>%
mutate(group_INST = cut(INST_lag,
quantile(INST_lag, c(0, 0.3, 0.7, 1)),
labels = c("S", "M", "B")))
dataD4 <- dataD3 |>
group_by(Year,Month,group_INST) |>
drop_na() |>
mutate(group_FI=cut(lag_FI,
quantile(lag_FI, probs = seq(0, 1, by = 0.1)),
include.lowest = TRUE,
labels = 1:10)) |>
mutate(group_INST_FI = paste0(group_INST,group_FI))
#计算超额收益并且将长表变成宽表，然后筛选出需要的组合H、L和HL
dataD5 <- dataD4 |>
group_by(Year,Month,group_INST_FI) |>
summarise(exret_mkt_weight=weighted.mean(Ri, Msmvttl), .groups = "drop") |>
pivot_wider(names_from = group_INST_FI, values_from = exret_mkt_weight) |>
select(-(B2:B9),-(S2:S9),-(M2:M9))|>
mutate(SHL=S10-S1,
MHL=M10-M1,
BHL=B10-B1) |>
select(Year,Month,S1,S10,SHL,M1,M10,MHL,B1,B10,BHL)
#S
for (i in 1:3) {
# value-weighted模型
tblD[i,1] <- myregression(dataD5[[i+2]],"vw")[1]
tblD[i,2] <- myregression(dataD5[[i+2]],"vw")[2]
}
#M
for (i in 1:3) {
# value-weighted模型
tblD[i,3] <- myregression(dataD5[[i+5]],"vw")[1]
tblD[i,4] <- myregression(dataD5[[i+5]],"vw")[2]
}
#B
for (i in 1:3) {
# value-weighted模型
tblD[i,5] <- myregression(dataD5[[i+8]],"vw")[1]
tblD[i,6] <- myregression(dataD5[[i+8]],"vw")[2]
}
dataD6 <- dataD3 |>
drop_na()|>
group_by(Year,Month,group_INST) |>
summarise(exret_mkt_weight=weighted.mean(Ri, Msmvttl), .groups = "drop") |>
pivot_wider(names_from = group_INST, values_from = exret_mkt_weight)|>
left_join(CH3,by=c("Year","Month")) |>
left_join(CH4,by=c("Year","Month","mktrf"))
#暂且计算CH3
for (i in 1:3) {
# value-weighted模型
tblD[4,2*i-1] <-
myregression(dataD6[[i+2]],"CH3",dataD6$mktrf,dataD6$SMB,dataD6$VMG)[1]
tblD[4,2*i] <-
myregression(dataD6[[i+2]],"CH3",dataD6$mktrf,dataD6$SMB,dataD6$VMG)[2]
}
dataD7 <-  dataD4 |>
group_by(Year,Month,group_INST_FI) |>
summarise(exret_eql_weight=mean(Ri), .groups = "drop") |>
pivot_wider(names_from = group_INST_FI, values_from = exret_eql_weight) |>
select(-(B2:B9),-(S2:S9),-(M2:M9))|>
mutate(SHL=S10-S1,
MHL=M10-M1,
BHL=B10-B1) |>
select(Year,Month,S1,S10,SHL,M1,M10,MHL,B1,B10,BHL)
#双变量分组
#S
for (i in 1:3) {
# value-weighted模型
tblD[i,7] <- myregression(dataD7[[i+2]],"vw")[1]
tblD[i,8] <- myregression(dataD7[[i+2]],"vw")[2]
}
#M
for (i in 1:3) {
# value-weighted模型
tblD[i,9] <- myregression(dataD7[[i+5]],"vw")[1]
tblD[i,10] <- myregression(dataD7[[i+5]],"vw")[2]
}
#B
for (i in 1:3) {
# value-weighted模型
tblD[i,11] <- myregression(dataD7[[i+8]],"vw")[1]
tblD[i,12] <- myregression(dataD7[[i+8]],"vw")[2]
}
dataD8 <- dataD3 |>
drop_na()|>
group_by(Year,Month,group_INST) |>
summarise(exret_eql_weight=mean(Ri), .groups = "drop") |>
pivot_wider(names_from = group_INST, values_from = exret_eql_weight)|>
left_join(CH3,by=c("Year","Month")) |>
left_join(CH4,by=c("Year","Month","mktrf"))
#暂且计算CH3
for (i in 1:3) {
# value-weighted模型
tblD[4,2*i+5] <-
myregression(dataD8[[i+2]],"CH3",dataD8$mktrf,dataD8$SMB,dataD8$VMG)[1]
tblD[4,2*i+6] <-
myregression(dataD8[[i+2]],"CH3",dataD8$mktrf,dataD8$SMB,dataD8$VMG)[2]
}
starsD <-  matrix(0, nrow = 4,ncol=12)
df_r_ret <- 131
df_r_alpha <- 128 #CH3
# 计算每个系数在不同的显著性水平上的显著性，并将结果存储在"stars"矩阵中
# 前三行和后面的自由度不同
for (k in 1:3) {
for (v in seq(from = 1, to = 11, by = 2)) {
starsD[k, v] <- (abs(tblD[k, v + 1]) > abs(qt(0.1/2, df_r_ret))) +
(abs(tblD[k, v + 1]) > abs(qt(0.05/2, df_r_ret))) +
(abs(tblD[k, v + 1]) > abs(qt(0.01/2, df_r_ret)))
}
}
for (v in seq(from = 1, to = 11, by = 2)) {
starsD[4, v] <- (abs(tblD[4, v + 1]) > abs(qt(0.1/2, df_r_alpha))) +
(abs(tblD[4, v + 1]) > abs(qt(0.05/2, df_r_alpha))) +
(abs(tblD[4, v + 1]) > abs(qt(0.01/2, df_r_alpha)))}
#保留两位小数
tblD1 <- round(tblD,digits = 2)
tblD1 <- matrix(c(as.character(tblD1)),nrow=4)
tblD1[starsD == 1] <- sub("^(.*)$", "\\1*", tblD1[starsD == 1])
tblD1[starsD == 2] <- sub("^(.*)$", "\\1**", tblD1[starsD == 2])
tblD1[starsD == 3] <- sub("^(.*)$", "\\1***", tblD1[starsD == 3])
write.csv(tblD1, file="tbl4D.csv")
library(tidyverse)
library(xts)
library(tseries)
library(zoo)
library(dplyr)
library(lmtest)
library(sandwich)
#设置函数计算系数值以及Newey-West t 值，y值为“vw”代表为均值平均，CH3代表CH3模型的alpha，CH4代表CH4模型的alpha，z,w,u,v的默认值为0
myregression <- function(x,y,z=0,w=0,u=0,v=0){
if(y=="vw"){
model <- lm(x~1)
}else if(y=="CH3"){
model <- lm(x~z+w+u)
}else{
model <- lm(x~z+w+u+v)
}
nw <- NeweyWest(model,lag=24,adjust = T)
ttest <- coeftest(model, vcov = nw)[1,]
return(c(ttest[1],ttest[3]))
}
tblD <- matrix(NA,nrow = 4,ncol=12,
dimnames=list(c("L", "H", "H-L","Alpha"),
c("S","S_t","M","M_t","B","B_t",
"E_S","E_S_t","E_M","E_M_t","E_B","E_B_t")))
INST1 <- read_csv("INST.csv")
INST1 <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/INST/INST.csv")
exret <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/处理后的个股月超额收益率/refined monthly exret.csv")
CH3 <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/CH3&CH4/CH3.csv")
CH4 <- read_csv("C:/Users/ASUS/Desktop/LEARN/金融建模/金融建模/CH3&CH4/CH4.csv")
#股票代码格式统一
FI1$Stkcd <- str_pad(FI1$Stkcd, width = 6, pad = "0", side = "left")
exret$Stkcd <- str_pad(exret$Stkcd, width = 6, pad = "0", side = "left")
#提取日期
Date1 <- FI1 |>
select(Stkcd,Year,Month)
INST1 <- INST1 |>
separate(EndDate, c("Year","Month","Day"),sep = "-",convert = T) |>
mutate(Year=as.numeric(Year),
Month=as.numeric(Month)) |>
rename(Stkcd=Symbol,INST=InsInvestorProp)
InST2 <- Date1 |> mutate(Stkcd = as.numeric(Stkcd)) |>
left_join(INST1,by=c("Stkcd","Year","Month")) %>%
fill(INST) %>% rename(INST_filled=INST)
data <- exret |>
left_join(FI1,by = c("Stkcd","Year","Month")) |>
mutate(Ri=Ri*100)
InST2$INST_lag <- lag(InST2$INST_filled)
dataD1 <- data |> mutate(Stkcd = as.numeric(Stkcd)) |>
left_join(InST2,by=c("Stkcd","Year","Month"))
dataD2 <- dataD1 |>
select(Stkcd,Year,Month,lag_FI,Mretwd,rf,Ri,Msmvttl,INST_lag) |>
drop_na()
dataD3 <- dataD2 |>
group_by(Year, Month) %>%
mutate(group_INST = cut(INST_lag,
quantile(INST_lag, c(0, 0.3, 0.7, 1)),
labels = c("S", "M", "B")))
dataD4 <- dataD3 |>
group_by(Year,Month,group_INST) |>
drop_na() |>
mutate(group_FI=cut(lag_FI,
quantile(lag_FI, probs = seq(0, 1, by = 0.1)),
include.lowest = TRUE,
labels = 1:10)) |>
mutate(group_INST_FI = paste0(group_INST,group_FI))
#计算超额收益并且将长表变成宽表，然后筛选出需要的组合H、L和HL
dataD5 <- dataD4 |>
group_by(Year,Month,group_INST_FI) |>
summarise(exret_mkt_weight=weighted.mean(Ri, Msmvttl), .groups = "drop") |>
pivot_wider(names_from = group_INST_FI, values_from = exret_mkt_weight) |>
select(-(B2:B9),-(S2:S9),-(M2:M9))|>
mutate(SHL=S10-S1,
MHL=M10-M1,
BHL=B10-B1) |>
select(Year,Month,S1,S10,SHL,M1,M10,MHL,B1,B10,BHL)
#S
for (i in 1:3) {
# value-weighted模型
tblD[i,1] <- myregression(dataD5[[i+2]],"vw")[1]
tblD[i,2] <- myregression(dataD5[[i+2]],"vw")[2]
}
#M
for (i in 1:3) {
# value-weighted模型
tblD[i,3] <- myregression(dataD5[[i+5]],"vw")[1]
tblD[i,4] <- myregression(dataD5[[i+5]],"vw")[2]
}
#B
for (i in 1:3) {
# value-weighted模型
tblD[i,5] <- myregression(dataD5[[i+8]],"vw")[1]
tblD[i,6] <- myregression(dataD5[[i+8]],"vw")[2]
}
dataD6 <- dataD3 |>
drop_na()|>
group_by(Year,Month,group_INST) |>
summarise(exret_mkt_weight=weighted.mean(Ri, Msmvttl), .groups = "drop") |>
pivot_wider(names_from = group_INST, values_from = exret_mkt_weight)|>
left_join(CH3,by=c("Year","Month")) |>
left_join(CH4,by=c("Year","Month","mktrf"))
#暂且计算CH3
for (i in 1:3) {
# value-weighted模型
tblD[4,2*i-1] <-
myregression(dataD6[[i+2]],"CH3",dataD6$mktrf,dataD6$SMB,dataD6$VMG)[1]
tblD[4,2*i] <-
myregression(dataD6[[i+2]],"CH3",dataD6$mktrf,dataD6$SMB,dataD6$VMG)[2]
}
dataD7 <-  dataD4 |>
group_by(Year,Month,group_INST_FI) |>
summarise(exret_eql_weight=mean(Ri), .groups = "drop") |>
pivot_wider(names_from = group_INST_FI, values_from = exret_eql_weight) |>
select(-(B2:B9),-(S2:S9),-(M2:M9))|>
mutate(SHL=S10-S1,
MHL=M10-M1,
BHL=B10-B1) |>
select(Year,Month,S1,S10,SHL,M1,M10,MHL,B1,B10,BHL)
#双变量分组
#S
for (i in 1:3) {
# value-weighted模型
tblD[i,7] <- myregression(dataD7[[i+2]],"vw")[1]
tblD[i,8] <- myregression(dataD7[[i+2]],"vw")[2]
}
#M
for (i in 1:3) {
# value-weighted模型
tblD[i,9] <- myregression(dataD7[[i+5]],"vw")[1]
tblD[i,10] <- myregression(dataD7[[i+5]],"vw")[2]
}
#B
for (i in 1:3) {
# value-weighted模型
tblD[i,11] <- myregression(dataD7[[i+8]],"vw")[1]
tblD[i,12] <- myregression(dataD7[[i+8]],"vw")[2]
}
dataD8 <- dataD3 |>
drop_na()|>
group_by(Year,Month,group_INST) |>
summarise(exret_eql_weight=mean(Ri), .groups = "drop") |>
pivot_wider(names_from = group_INST, values_from = exret_eql_weight)|>
left_join(CH3,by=c("Year","Month")) |>
left_join(CH4,by=c("Year","Month","mktrf"))
#暂且计算CH3
for (i in 1:3) {
# value-weighted模型
tblD[4,2*i+5] <-
myregression(dataD8[[i+2]],"CH3",dataD8$mktrf,dataD8$SMB,dataD8$VMG)[1]
tblD[4,2*i+6] <-
myregression(dataD8[[i+2]],"CH3",dataD8$mktrf,dataD8$SMB,dataD8$VMG)[2]
}
starsD <-  matrix(0, nrow = 4,ncol=12)
df_r_ret <- 131
df_r_alpha <- 128 #CH3
# 计算每个系数在不同的显著性水平上的显著性，并将结果存储在"stars"矩阵中
# 前三行和后面的自由度不同
for (k in 1:3) {
for (v in seq(from = 1, to = 11, by = 2)) {
starsD[k, v] <- (abs(tblD[k, v + 1]) > abs(qt(0.1/2, df_r_ret))) +
(abs(tblD[k, v + 1]) > abs(qt(0.05/2, df_r_ret))) +
(abs(tblD[k, v + 1]) > abs(qt(0.01/2, df_r_ret)))
}
}
for (v in seq(from = 1, to = 11, by = 2)) {
starsD[4, v] <- (abs(tblD[4, v + 1]) > abs(qt(0.1/2, df_r_alpha))) +
(abs(tblD[4, v + 1]) > abs(qt(0.05/2, df_r_alpha))) +
(abs(tblD[4, v + 1]) > abs(qt(0.01/2, df_r_alpha)))}
#保留两位小数
tblD1 <- round(tblD,digits = 2)
tblD1 <- matrix(c(as.character(tblD1)),nrow=4)
tblD1[starsD == 1] <- sub("^(.*)$", "\\1*", tblD1[starsD == 1])
tblD1[starsD == 2] <- sub("^(.*)$", "\\1**", tblD1[starsD == 2])
tblD1[starsD == 3] <- sub("^(.*)$", "\\1***", tblD1[starsD == 3])
write.csv(tblD1, file="tbl4D.csv")
library(tidyverse)
A1 <- read_csv("tbl4A.csv")
B1 <- read_csv("tbl4B.csv")
C1 <- read_csv("tbl4C.csv")
D1 <- read_csv("tbl4D.csv")
tbl4 <- matrix('',nrow = 22,ncol=13)
tbl4[1,4] <- "Panel A: ME "
tbl4[1,10] <- "Panel B: EP "
tbl4[2,3]  <- "Value-weighted"
tbl4[2,5]  <- "Equal-weighted"
tbl4[2,7]  <- "Value-weighted"
tbl4[2,9]  <- "Equal-weighted"
tbl4[3,2:13] <- rep(c("S","M","B"),4)
tbl4[4:11,1] <- c("L","t","H","t","H-L","t","Alpha","t")
tbl4[12,4] <- "Panel A: ME "
tbl4[12,10] <- "Panel B: EP "
tbl4[13,3]  <- "Value-weighted"
tbl4[13,5]  <- "Equal-weighted"
tbl4[13,7]  <- "Value-weighted"
tbl4[13,9]  <- "Equal-weighted"
tbl4[14,2:13] <- rep(c("S","M","B"),4)
tbl4[15:22,1] <- c("L","t","H","t","H-L","t","Alpha","t")
A1 <- as.matrix(A1)
for (i in 2:5) {
for (j in 1:6) {
tbl4[(2*i):(2*i+1),j+1] <- A1[(i-1),(2*j):(2*j+1)]
}
}
B1 <- as.matrix(B1)
for (i in 2:5) {
for (j in 1:6) {
tbl4[(2*i):(2*i+1),j+7] <- B1[(i-1),(2*j):(2*j+1)]
}
}
C1 <- as.matrix(C1)
for (i in 2:5) {
for (j in 1:6) {
tbl4[(2*i+11):(2*i+12),j+1] <- C1[(i-1),(2*j):(2*j+1)]
}
}
D1 <- as.matrix(D1)
for (i in 2:5) {
for (j in 1:6) {
tbl4[(2*i+11):(2*i+12),j+7] <- D1[(i-1),(2*j):(2*j+1)]
}
}
write.csv(tbl4,file = "table4.csv")
